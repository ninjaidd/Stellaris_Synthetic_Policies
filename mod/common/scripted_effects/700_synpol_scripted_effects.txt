synpol_create_cybernetic_species_mod = {
	species = {
		create_species = {
			is_mod = yes
			name = this
			plural = this
			class = this
			portrait = this
			traits = this
			can_be_modified = this
			homeworld = this
			namelist = this
			gender = this
			traits = {
				ideal_planet_class = this
				trait = trait_cybernetic
            }
        }
		save_event_target_as = changing_species
	}

	owner = {
        # If policy is complusory update all pops
        # Else if policy is optional update some pops
        # Skip pop updating if policy is discretionary

        if = {
            limit = { has_policy_flag = cybernetics_compulsory }
            every_owned_pop = {
                limit = { is_exact_same_species = event_target:changing_species }
                change_species = last_created_species
            }
        }
        else_if = {
            limit = { has_policy_flag = cybernetics_optional }

            every_owned_pop = {
                limit = {
                    is_exact_same_species = event_target:changing_species
                    NOT = { has_pop_flag = synpol_cy_done@prev }
                }
                random_list = {
                    8 = {
                        change_species = last_created_species
                        modifier = {
                            factor = 1.14
                            root = { has_ethic = "ethic_fanatic_materialist" }
                        }
                        modifier = {
                            factor = 1.07
                            root = { has_ethic = "ethic_materialist" }
                        }
                        modifier = {
                            factor = 0.95
                            root = { has_ethic = "ethic_spiritualist" }
                        }
                        modifier = {
                            factor = 0.91
                            root = { has_ethic = "ethic_fanatic_spiritualist" }
                        }
                        set_timed_pop_flag = {
                            flag = synpol_cy_done@prev
                            days = 30
                        }
                    }
                    1 = {
                        set_timed_pop_flag = {
                            flag = synpol_cy_done@prev
                            days = 30
                        }
                    }
                }
            }

            random_owned_pop = {
                limit = {
                    has_pop_flag = synpol_cy_force@prev
                }
                change_species = last_created_species
            }
        }
        else_if = {
            limit = {
                NOT = { has_country_flag = synpol_cy_dis }
				has_policy_flag = cybernetics_discretionary
			}
            if = {
                limit = {
                    this.capital_scope = {
                        any_owned_pop = {
                            is_exact_same_species = prevprev
                        }
                    }
                }
                this.capital_scope = {
                    random_owned_pop = {
                        limit = { is_exact_same_species = prevprev }
                        change_species = last_created_species
                    }
                }
            }
            else_if = {
                limit = {
                    this.capital_scope = {
                        any_owned_pop = {
                            is_same_species = prevprev
                        }
                    }
                }
                this.capital_scope = {
                    random_owned_pop = {
                        limit = { is_same_species = prevprev }
                        change_species = last_created_species
                    }
                }
            }
            else_if = {
                limit = {
                    any_owned_pop = {
                        is_exact_same_species = prevprev
                    }
                }
                random_owned_pop = {
                    limit = { is_exact_same_species = prevprev }
                    change_species = last_created_species
                }
            }
            else = {
                random_owned_pop = {
                    limit = { is_same_species = prevprev }
                    change_species = last_created_species
                }
            }
            set_timed_country_flag = {
                flag = synpol_cy_dis
                days = 30
            }
        }

        # TODO do something if not compulsory
		every_owned_leader = {
			limit = { is_exact_same_species = event_target:changing_species }
			change_species = last_created_species
		}
		every_pool_leader = {
			limit = { is_exact_same_species = event_target:changing_species }
			change_species = last_created_species
		}
        # TODO ignore if discretionary, limit if optional
		every_owned_army = {
			limit = {
				exists = species
				is_exact_same_species = event_target:changing_species
			}
			change_species = last_created_species
		}
        # TODO ignore if discretionary
		every_owned_ship = {
			limit = {
				is_ship_class = shipclass_colonizer
				is_exact_same_species = event_target:changing_species
			}
			change_species = last_created_species
		}
	}
}